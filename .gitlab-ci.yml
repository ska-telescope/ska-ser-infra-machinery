image: $SKA_K8S_TOOLS_BUILD_DEPLOY

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  TERRAFORM_VERSION: "1.2.8"
  CA_CERT_PASSWORD: $CA_CERT_PASSWORD

stages:
  - test

.requirements: &install_reqs
  - pip install poetry
  # Create virtual environment in local root directory
  # - poetry config virtualenvs.in-project true
  # We don't need virtual environments. If we want caching of actual packages this needs to be true
  - poetry config virtualenvs.create false
  # We don't want editable mode (https://pip.pypa.io/en/stable/reference/pip_install/#editable-installs)
  - poetry install --no-root


test_e2e:
  variables:
    SERVICE: logging
    DATACENTRE: stfc-techops
  stage: test
  tags:
    - ska-techops-iac-gitlab-runner
  before_script:
    - '[ -f .make/terraform.mk ] || (echo "File terraform.mk not included in Makefile"; exit 1;)'
    - apt update
    - wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip -O terraform.zip
    - unzip terraform.zip && rm terraform.zip && mv terraform /usr/bin/terraform
    - *install_reqs
  script:
    - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/load-secure-files/-/raw/main/installer" | bash
    - cp .secure_files/clouds.yaml ska-ser-orchestration/tests/e2e/logging/clouds.yaml
    - cp .secure_files/ska-techops.pem resources/keys/ska-techops.pem
    - make test
  # when: manual
  artifacts:
    paths:
      - tests/e2e/build/
    when: always

# build_clean_e2e:
#   variables:
#     TERRAFORM_VERSION: "1.2.8"
#     DATACENTRE: stfc-techops
#     SERVICE: logging
#     CA_CERT_PASSWORD: $CA_CERT_PASSWORD
#     TF_ARGUMENTS: '-input=false -no-color -var-file="$DATACENTRE".tfvars'
#     TF_AUTO_APPROVE: "true"
#   stage: post_test
#   dependencies: 
#     - test_e2e
#   before_script:
#     - cp tests/e2e/build/tfstate.json ska-ser-orchestration/tests/e2e/logging/terraform.tfstate
#   script:
#     - make orch init
#     - make orch destroy
#   when: on_failure

# include:
# - project: 'ska-telescope/templates-repository'
#   file: 'gitlab-ci/includes/terraform.gitlab-ci.yml'
# - project: 'ska-telescope/templates-repository'
#   file: 'gitlab-ci/includes/finaliser.gitlab-ci.yml'