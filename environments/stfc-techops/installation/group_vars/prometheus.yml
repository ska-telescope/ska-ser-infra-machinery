---
debug: true
production: true

# jump_host: " -F ../ssh.config "

fixed_ip:

############################
# heat-cluster vars
############################
# This name is used for the Heat stack and as a prefix for the
# cluster node hostnames.
cluster_name: prometheus
cluster_keypair: ska-techops
create_floating_ip: false

# External
external_network_id: 5283f642-8bd8-48b6-8608-fa3006ff4539

# Private Network - SKA-TechOps-Private
private_network_id: e99cdda3-c3f7-49c6-b168-7fee803c1a77
# subnet 192.168.99.0/24 - SKA-Techops-Subnet

log_docker: true

cluster_az: ceph

cluster_net:
  - { net: "SKA-TechOps-Private", subnet: "SKA-Techops-Subnet", "floatingip_net_id": "5283f642-8bd8-48b6-8608-fa3006ff4539" }


# Docker volume
docker_vol_size: 20

docker_deb_version: 5:20.10.5~3-0~ubuntu-xenial
containerd_version: 1.4.4-1

# don't add the data volumes to the management server
data_filesystem: /var/lib/prometheus
data_vol_size: 200
data_vol_snapshot: ""
create_data_vol: true
mount_data_vol: true

data2_vol_name: null
data2_vol_size: 0
data2_filesystem: /null
create_data2_vol: false
mount_data2_vol: false


prometheus:
  name: "prometheus"
  flavor: "c3.large"   # 8/80/16
  image: "Ubuntu-Bionic-NoGui"
  num_nodes: 1

cluster_group_vars: # cluster wide defaults/overides
  cluster:
    ansible_user: ubuntu
    ansible_python_interpreter: python3

cluster_groups:
  - "{{ prometheus }}"

# Node group assignments for cluster roles.
# These group assignments are appended to the cluster inventory file.
# The names of these roles are cross-referenced to groups referred to
# in playbooks in the ansible/ directory.
cluster_roles:
  - name: "nodes"
    groups: "{{ cluster_groups }}"
  - name: "prometheus"
    groups: "{{ cluster_groups }}"
  - name: "logging"
    groups: "{{ cluster_groups }}"

############

# can only do one cluster - v1
k8s_api_server_addr: "10.200.0.63"
k8s_api_server_port: "6443"
k8s_api_server: "https://{{ k8s_api_server_addr }}:{{ k8s_api_server_port }}"
k8s_certificate_authority: ""
k8s_client_certificate: "/etc/prometheus/ca.crt"
k8s_client_key: ""
k8s_bearer_token: "/etc/prometheus/bearer.token"
k8s_username: ""
localuser: ubuntu

k8s_external_dns_entry: k8s.stfc.skao.int

archiver_ip: "192.168.99.229"
archiver_user: "eda_admin"
archiver_password: "*************"
archiver_default_db: "tango"
grafana_host: "192.168.99.154"
grafana_port: 3000
grafana_user: "admin"
grafana_admin_password: "*************"
grafana_disable_admin_account_creation: "false"
k8s_loadbalancer: "10.200.0.63"
k8s_master: "10.200.1.129"
tangodb_password: "*************"


# ST-1273: AzureAD Grafana Integration Variables
k8s_external_dns_entry: k8s.stfc.skao.int
azuread_client_id:
azuread_client_secret:
azuread_tenant_id:


prometheus_datacentre: stfc-ska-monitor


prometheus_global:
  scrape_interval: 15s
  scrape_timeout: 5s
  evaluation_interval: 15s

prometheus_static_node_metric_relabel_configs:
  - action: replace
    regex: 192\.168\.99\.194 :9100
    replacement: terminus:9100
    source_labels:
    - instance
    target_label: instance

elasticsearch_instance_add_cluster_label:
  - regex: '^192\.168\.99\.(131|22|183):(\d+)'
    replacement: systems-monitoring1
    source_labels: [instance]
    target_label: cluster
  - regex: '^192\.168\.99\.(131|22|183):(\d+)'
    replacement: systems-monitoring1
    source_labels: [instance]
    target_label: cluster


prometheus_scrape_configs:
  - job_name: "prometheus"
    static_configs:
      - targets:
          - "{{ ansible_fqdn | default(ansible_host) | default('localhost') }}:9090"

  - job_name: "gitlab_ci_pipelines_exporter"
    static_configs:
      - targets:
          - "{{ ansible_fqdn | default(ansible_host) | default('localhost') }}:8080"

  - job_name: "node"
    file_sd_configs:
    - files:
      - 'node_exporter.json'
    metric_relabel_configs: "{{ elasticsearch_instance_add_cluster_label + prometheus_node_metric_relabel_configs }}"

  # - job_name: "gitlab-runner"
  #   file_sd_configs:
  #   - files:
  #     - 'gitlab_exporter.json'

  - job_name: "gitlab-runner"
    static_configs:
    - targets:
      - "10.200.0.63:9252"

  - job_name: "elasticsearch"
    file_sd_configs:
    - files:
      - 'elasticsearch_exporter.json'

  - job_name: "docker"
    file_sd_configs:
    - files:
      - 'docker_exporter.json'

  - job_name: "kube-proxy"
    file_sd_configs:
    - files:
      - 'kube-proxy.json'
    metric_relabel_configs: "{{ elasticsearch_instance_add_cluster_label + prometheus_node_metric_relabel_configs }}"

  # - job_name: "kube-state-metrics"
  #   file_sd_configs:
  #   - files:
  #     - 'kubernetes_exporter.json'

  # - job_name: "k8stelemetry"
  #   file_sd_configs:
  #   - files:
  #     - 'kubernetes_telemetry.json'

  - job_name: "kube-state-metrics"
    static_configs:
    - targets:
      - "10.200.0.63:32080"  # load balancer
    metric_relabel_configs:
    - action: replace
      regex: 192\.168\.99\.222:32080
      replacement: systems-k8s1-loadbalancer:32080
      source_labels:
        - instance
      target_label: instance

  - job_name: "k8stelemetry"
    static_configs:
    - targets:
      - "10.200.0.63:32081"  # load balancer
    metric_relabel_configs:
    - action: replace
      regex: 192\.168\.99\.222:32081
      replacement: systems-k8s1-loadbalancer:32081
      source_labels:
        - instance
      target_label: instance

  - job_name: "ceph_cluster"
    file_sd_configs:
    - files:
      - 'ceph-mgr.json'

# node exporter versions
node_exporter_version: 0.18.1-1.el7
node_exporter_apt_package: http://archive.ubuntu.com/ubuntu/pool/universe/p/prometheus-node-exporter/prometheus-node-exporter_0.18.1+ds-2_amd64.deb

thanos_query_endpoints:
- 192.168.99.154:10901
- 192.168.99.31:19090

